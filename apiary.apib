FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Liovinci API

# Group REST Interfaces
REST interface for searching, querying and modifying products on the site

## Search Products [GET /explore/api?searchProducts]
+ Request (application/json)

    + Headers 
    
            Authorization: Bearer ${TOKEN}
            X-Nonce-Value: ${NONCE}
            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';

    + Attributes
        + productName: Example (string, required)
        + companyName: Google (string)
        + filters
            + dateAdded (DateFilter)
            + tags (array[string]):
                + tech
                + utility
            + lastUpdate (DateFilter)
        + limit: 5 (number, required)
    
    
    
    + Schema
    
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "pattern": "^(\\d{2}/\\d{2}/\\d{2})"
                }
              }
            }

+ Response 200 (application/json)
    + Headers
    
            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
    
    + Attributes
        + results (array[ShortProduct], required)

## Fetch Product [GET /explore/api?fetchProduct]
+ Request (application/json)
    + Headers 
    
            Authorization: Bearer ${TOKEN}
            X-Nonce-Value: ${NONCE}
            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
    
    + Attributes
        + productID: 12311124531324 (number, required)

+ Response 200 (application/json)
    + Headers

            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
    
    + Attributes
        + result (Product, required)

## Fetch User [GET /explore/api?fetchUser]
+ Request (application/json)
    + Headers 
    
            Authorization: Bearer ${TOKEN}
            X-Nonce-Value: ${NONCE}
            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
            
    + Attributes
        + userID: 112313992 (number, required)

+ Response 200
    + Headers
    
            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
    
    + Attributes
        + result (User)

## Fetch Company [GET /explore/api?fetchCompany]
+ Request (application/json)
    + Headers 
    
            Authorization: Bearer ${TOKEN}
            X-Nonce-Value: ${NONCE}
            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
    
    + Attributes
        + companyID: 1232412531 (number, required)

+ Response 200
    + Headers

            Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';
    
    + Attributes
        + result (Company)

# Group URI Interface
Interface for use in the site itself, using traditional URI parameters. e.g. `/explore/api?gg=1`

## Search Products [GET /explore{?pn,cn,dao,dab,daa,tgs,luo,lub,lua,li}]

+ Parameters
    + pn: A Product (required, string) - Name of the Product to find
    + cn: Google (optional, string) ... Company name to filter with
    + dao: 12/12/20 (optional, string) ... Date Added On
    + dab: 12/13/20 (optional, string) ... Date Added Before
    + daa: 12/11/20 (optional, string) ... Date Added After
    + tgs (optional, string) ... A Tag to filter with. Add multiple times to specify multiple tags
    + luo (optional, string) ... Last updated on
    + lub (optional, string) ... Last updated before
    + lua (optional, string) ... Last updated after
    + li: 32 (optional, number) - Number of items to limit the return to
    
        + Default: 40
        
        
+ Response 200 (document/html)

# Data Structures

## DateFilter
+ on: 11/12/22 (string)
+ before: 10/12/22 (string)
+ after: 7/12/22 (string)

## ShortProduct
+ productName: Example (string, required)
+ productID: 12311124531324 (number, required)
+ company (Company)
+ dateAdded: 11/12/13 (string, required)
+ lastUpdate: 11/12/14 (string)
+ updates (array[Update])
+ rating: 5 (number)


## Update
+ title: An Update (string,required)
+ datePosted: 11/12/15 (string, required)
+ authorName: Joe Bloggs (string, required)

## Product
+ productName: Example (string, required)
+ productID: 12311124531324 (number, required)
+ company (Company)
+ dateAdded: 11/12/13 (string, required)
+ lastUpdate: 11/12/14 (string)
+ updates (array[Update])
+ rating: 5 (number)
+ comments (array[Comment])


## Media
+ type
    + One Of
        + picture
        + video
        + thumbnail
        + audioClip
+ resourceName: Profile Pic.jpeg (string, required)
+ resourceUri: http://thing.thing/img/img.jpeg (string, required)
+ alternateText: Profile Picture for Google (string, required)
+ size
    + height: 20 (number)
    + width: 30 (number)

## Thumbnail
+ resourceName: thumbnailPic.jpeg (string, required)
+ alternateText: Thumbnail of product (string, required)
+ size
    + height: 20 (number)
    + width: 30 (number)

## Company
+ name: Google (string, required)
+ companyPage: https://abc.xyz (string)




## User
+ username: Gerald Joe Bloggs (string, required)
+ dateJoined: 11/12/32 (string, required)
+ profilePic (required)
    + thumbnail (Thumbnail)
    + fullSize (Media)
+ userID: 12312311123 (number, required)

## Comment
+ user (User)
+ content: This is a comment (string, required)
+ datePosted: 11/12/41 (string, required)